#!/bin/bash
#
# Builds html static pages and deploys them into gh-pages github repo branch.
#
# by Alexander Borsuk <me@alex.bio> from Minsk, Belarus.
#
# Useful debug options:
# -e aborts if any command has failed.
# -u aborts on using unset variable.
# -x prints all executed commands.
# -o pipefail aborts if on any failed pipe operation.
set -euo pipefail

# hugo publish folder where static html content is generated.
OUT_DIR=docs

# Check if it's a root folder.
[ -f ./config.yaml ] || { echo "ERROR: It is not the root repo folder."; exit 1; }

[ -d ./.git ] || { echo "ERROR It is not a git repository."; exit 1; }

# Repo should be up-to-date.
git remote update

# Setup cloned git repo in the generated folder.
if [ ! -d "$OUT_DIR/.git" ]; then
  echo "Initializing $OUT_DIR folder and binding it to gh-pages branch of the same repository."
  # Sanity check.
  [[ "${OUT_DIR:0:1}" != "/" ]] || { echo "Invalid OUT_DIR? $OUT_DIR"; exit 1; }
  rm -rf "$OUT_DIR"
  mkdir "$OUT_DIR"
  cp -r .git "$OUT_DIR/.git"
fi

# Initialize and switch to gh-pages branch in the docs/.git repo.
pushd "$OUT_DIR"
git checkout gh-pages > /dev/null 2>&1 || { \
  git checkout --orphan gh-pages;
  git rm -rf .
}
# Clean all untracked files.
git clean -f
popd

# Rebuild everything before deployment.
source build.sh

# Check if there are any changes to publish.
pushd "$OUT_DIR"
if [[ $(git status --porcelain | wc -l) -eq 0 ]]; then
  echo "There is nothing to publish. Have you made any changes?"
  popd
  exit 0
fi

# Publish web site to Github Pages.
git add -A
git commit -m "Regenerated by deployment script."
git push -u origin gh-pages
popd
echo "Successfully published changes to GitHub Pages."
